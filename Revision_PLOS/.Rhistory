res<-read.csv('train_model_results.csv')
res$LR<-as.factor(res$LR)
acc_p<-ggplot(data=res, aes(x=epoch))+
#geom_line(aes(y=Acc, color=LR))+
#geom_point(aes(y=Acc, color=LR, shape=model))+
geom_line(aes(y=Acc, color=LR, linetype=model), size=1)+
theme_minimal()+
scale_colour_manual(values=cbPalette)
acc_p
res<-read.csv('train_model_results.csv')
res$LR<-as.factor(res$LR)
acc_p<-ggplot(data=res, aes(x=epoch))+
#geom_line(aes(y=Acc, color=LR))+
#geom_point(aes(y=Acc, color=LR, shape=model))+
geom_line(aes(y=Acc, color=LR, linetype=model), size=1)+
theme_minimal()+
scale_colour_manual(values=cbPalette)
acc_p
res<-read.csv('train_model_results.csv')
res$LR<-as.factor(res$LR)
acc_p<-ggplot(data=res, aes(x=epoch))+
#geom_line(aes(y=Acc, color=LR))+
#geom_point(aes(y=Acc, color=LR, shape=model))+
geom_line(aes(y=Acc, color=LR, linetype=model), size=1)+
theme_minimal()+
scale_colour_manual(values=cbPalette)
acc_p
res<-read.csv('train_model_results.csv')
res$LR<-as.factor(res$LR)
acc_p<-ggplot(data=res, aes(x=epoch))+
#geom_line(aes(y=Acc, color=LR))+
#geom_point(aes(y=Acc, color=LR, shape=model))+
geom_line(aes(y=Acc, color=LR, linetype=model), size=1)+
theme_minimal()+
scale_colour_manual(values=cbPalette)
acc_p
res<-read.csv('train_model_results.csv')
res$LR<-as.factor(res$LR)
acc_p<-ggplot(data=res, aes(x=epoch))+
#geom_line(aes(y=Acc, color=LR))+
#geom_point(aes(y=Acc, color=LR, shape=model))+
geom_line(aes(y=Acc, color=LR, linetype=model), size=1)+
theme_minimal()+
scale_colour_manual(values=cbPalette)
acc_p
los_p<-ggplot(data=res, aes(x=epoch))+
#geom_line(aes(y=Acc, color=LR))+
#geom_point(aes(y=Acc, color=LR, shape=model))+
geom_line(aes(y=Loss, color=LR, linetype=model), size=1)+
theme_minimal()+
scale_colour_manual(values=cbPalette)
los_p
res<-read.csv('train_model_results.csv')
res$LR<-as.factor(res$LR)
acc_p<-ggplot(data=res, aes(x=epoch))+
#geom_line(aes(y=Acc, color=LR))+
#geom_point(aes(y=Acc, color=LR, shape=model))+
geom_line(aes(y=Acc, color=LR, linetype=model), size=1)+
theme_minimal()+
scale_colour_manual(values=cbPalette)
acc_p
res<-read.csv('train_model_results.csv')
res$LR<-as.factor(res$LR)
acc_p<-ggplot(data=res, aes(x=epoch))+
#geom_line(aes(y=Acc, color=LR))+
#geom_point(aes(y=Acc, color=LR, shape=model))+
geom_line(aes(y=Acc, color=LR, linetype=model), size=1)+
theme_minimal()+
scale_colour_manual(values=cbPalette)
acc_p
res<-read.csv('train_model_results.csv')
res$LR<-as.factor(res$LR)
acc_p<-ggplot(data=res, aes(x=epoch))+
#geom_line(aes(y=Acc, color=LR))+
#geom_point(aes(y=Acc, color=LR, shape=model))+
geom_line(aes(y=Acc, color=LR, linetype=model), size=1)+
theme_minimal()+
scale_colour_manual(values=cbPalette)
acc_p
res<-read.csv('train_model_results.csv')
res$LR<-as.factor(res$LR)
acc_p<-ggplot(data=res, aes(x=epoch))+
#geom_line(aes(y=Acc, color=LR))+
#geom_point(aes(y=Acc, color=LR, shape=model))+
geom_line(aes(y=Acc, color=LR, linetype=model), size=1)+
theme_minimal()+
scale_colour_manual(values=cbPalette)
acc_p
res2<-read.csv('test_model_results.csv')
res2$LR<-as.factor(res2$LR)
testres<-ggplot(data=res2, aes(x=prec, y=recall, color=LR, shape=model))+
#geom_point()+
theme_minimal()+
# We jitter the points because some are overlapping
geom_jitter(aes(color=LR, shape=model), width=0.0007, size=3)+
geom_jitter(aes(color=LR, shape=model), width=0.001, size=3)+
scale_colour_manual(values=cbPalette) #Use the colorblind palette
testres
res<-read.csv('train_model_results.csv')
res$LR<-as.factor(res$LR)
acc_p<-ggplot(data=res, aes(x=epoch))+
#geom_line(aes(y=Acc, color=LR))+
#geom_point(aes(y=Acc, color=LR, shape=model))+
#geom_line(aes(y=Acc, color=LR, linetype=model), size=1)+
geom_line(data=res[which(res$model == 'densenet'),], aes(y=Acc,x=epoch, color=LR), size=1.5)+
geom_line(data=res[which(res$model != 'densenet'),], aes(y=Acc,x=epoch, color=LR, linetype=model), size=1)+
theme_minimal()+
scale_colour_manual(values=cbPalette)
acc_p
acc_p<-ggplot(data=res, aes(x=epoch))+
#geom_line(aes(y=Acc, color=LR))+
#geom_point(aes(y=Acc, color=LR, shape=model))+
#geom_line(aes(y=Acc, color=LR, linetype=model), size=1)+
#geom_line(data=res[which(res$model == 'densenet'),], aes(y=Acc,x=epoch, color=LR), size=1.5)+
geom_line(data=res[which(res$model != 'ResneXt'),], aes(y=Acc,x=epoch, color=LR, linetype=model), size=1)+
theme_minimal()+
scale_colour_manual(values=cbPalette)
acc_p
res<-read.csv('train_model_results.csv')
res$LR<-as.factor(res$LR)
acc_p<-ggplot(data=res, aes(x=epoch))+
#geom_line(aes(y=Acc, color=LR))+
#geom_point(aes(y=Acc, color=LR, shape=model))+
#geom_line(aes(y=Acc, color=LR, linetype=model), size=1)+
#geom_line(data=res[which(res$model == 'densenet'),], aes(y=Acc,x=epoch, color=LR), size=1.5)+
geom_line(data=res[which(res$model != 'ResneXt'),], aes(y=Acc,x=epoch, color=LR, linetype=model), size=1)+
theme_minimal()+
scale_colour_manual(values=cbPalette)
acc_p
res<-read.csv('train_model_results.csv')
res$LR<-as.factor(res$LR)
acc_p<-ggplot(data=res, aes(x=epoch))+
#geom_line(aes(y=Acc, color=LR))+
#geom_point(aes(y=Acc, color=LR, shape=model))+
#geom_line(aes(y=Acc, color=LR, linetype=model), size=1)+
#geom_line(data=res[which(res$model == 'densenet'),], aes(y=Acc,x=epoch, color=LR), size=1.5)+
geom_line(data=res[which(res$model != 'ResneXt'),], aes(y=Acc,x=epoch, color=LR, linetype=model), size=1)+
theme_minimal()+
scale_colour_manual(values=cbPalette)
acc_p
plottinglines<- c("solid","dashed", "dotted","dotdash","F1")
acc_p<-ggplot(data=res, aes(x=epoch))+
#geom_line(aes(y=Acc, color=LR))+
#geom_point(aes(y=Acc, color=LR, shape=model))+
#geom_line(aes(y=Acc, color=LR, linetype=model), size=1)+
#geom_line(data=res[which(res$model == 'densenet'),], aes(y=Acc,x=epoch, color=LR), size=1.5)+
geom_line(data=res[which(res$model != 'ResneXt'),], aes(y=Acc,x=epoch, color=LR, linetype=model), size=1)+
theme_minimal()+
scale_colour_manual(values=cbPalette)+
scale_linetype_discrete(values=plottinglines)
acc_p<-ggplot(data=res, aes(x=epoch))+
#geom_line(aes(y=Acc, color=LR))+
#geom_point(aes(y=Acc, color=LR, shape=model))+
#geom_line(aes(y=Acc, color=LR, linetype=model), size=1)+
#geom_line(data=res[which(res$model == 'densenet'),], aes(y=Acc,x=epoch, color=LR), size=1.5)+
geom_line(data=res[which(res$model != 'ResneXt'),], aes(y=Acc,x=epoch, color=LR, linetype=model), size=1)+
theme_minimal()+
scale_colour_manual(values=cbPalette)+
scale_linetype_manual(values=plottinglines)
acc_p
acc_p<-ggplot(data=res, aes(x=epoch))+
#geom_line(aes(y=Acc, color=LR))+
#geom_point(aes(y=Acc, color=LR, shape=model))+
#geom_line(aes(y=Acc, color=LR, linetype=model), size=1)+
#geom_line(data=res[which(res$model == 'densenet'),], aes(y=Acc,x=epoch, color=LR), size=1.5)+
geom_line(data=res[which(res$model != 'ResneXt'),], aes(y=Acc,x=epoch, color=LR, linetype=model), size=1)+
theme_minimal(legend.key.width=unit(4,"cm"))+
scale_colour_manual(values=cbPalette)+
scale_linetype_manual(values=plottinglines)+
acc_p
acc_p<-ggplot(data=res, aes(x=epoch))+
#geom_line(aes(y=Acc, color=LR))+
#geom_point(aes(y=Acc, color=LR, shape=model))+
#geom_line(aes(y=Acc, color=LR, linetype=model), size=1)+
#geom_line(data=res[which(res$model == 'densenet'),], aes(y=Acc,x=epoch, color=LR), size=1.5)+
geom_line(data=res[which(res$model != 'ResneXt'),], aes(y=Acc,x=epoch, color=LR, linetype=model), size=1)+
theme_minimal()+
scale_colour_manual(values=cbPalette)+
scale_linetype_manual(values=plottinglines)+
theme(legend.key.width=unit(4,"cm"))
acc_p
acc_p<-ggplot(data=res, aes(x=epoch))+
#geom_line(aes(y=Acc, color=LR))+
#geom_point(aes(y=Acc, color=LR, shape=model))+
#geom_line(aes(y=Acc, color=LR, linetype=model), size=1)+
#geom_line(data=res[which(res$model == 'densenet'),], aes(y=Acc,x=epoch, color=LR), size=1.5)+
geom_line(data=res[which(res$model != 'ResneXt'),], aes(y=Acc,x=epoch, color=LR, linetype=model), size=1)+
theme_minimal()+
scale_colour_manual(values=cbPalette)+
scale_linetype_manual(values=plottinglines)+
theme(legend.key.width=unit(2,"cm"))
acc_p
acc_p<-ggplot(data=res, aes(x=epoch))+
#geom_line(aes(y=Acc, color=LR))+
#geom_point(aes(y=Acc, color=LR, shape=model))+
#geom_line(aes(y=Acc, color=LR, linetype=model), size=1)+
#geom_line(data=res[which(res$model == 'densenet'),], aes(y=Acc,x=epoch, color=LR), size=1.5)+
geom_line(data=res[which(res$model != 'ResneXt'),], aes(y=Acc,x=epoch, color=LR, linetype=model), size=1)+
theme_minimal()+
scale_colour_manual(values=cbPalette)+
scale_linetype_manual(values=plottinglines)+
theme(legend.key.width=unit(1,"cm"))
acc_p
res$model<-factor(res$model, levels=c("resnet-18","resnet-32","resnet-152","densnet"))
acc_p<-ggplot(data=res, aes(x=epoch))+
#geom_line(aes(y=Acc, color=LR))+
#geom_point(aes(y=Acc, color=LR, shape=model))+
#geom_line(aes(y=Acc, color=LR, linetype=model), size=1)+
#geom_line(data=res[which(res$model == 'densenet'),], aes(y=Acc,x=epoch, color=LR), size=1.5)+
geom_line(data=res[which(res$model != 'ResneXt'),], aes(y=Acc,x=epoch, color=LR, linetype=model), size=1)+
theme_minimal()+
scale_colour_manual(values=cbPalette)+
scale_linetype_manual(values=plottinglines)+
theme(legend.key.width=unit(1,"cm"))
acc_p
res2<-read.csv('test_model_results.csv')
res2$LR<-as.factor(res2$LR)
res2$model<-factor(res2$model, levels=c("resnet-18","resnet-32","resnet-152","densnet"))
testres<-ggplot(data=res2, aes(x=prec, y=recall, color=LR, shape=model))+
#geom_point()+
theme_minimal()+
# We jitter the points because some are overlapping
geom_jitter(aes(color=LR, shape=model), width=0.0007, size=3)+
geom_jitter(aes(color=LR, shape=model), width=0.001, size=3)+
scale_colour_manual(values=cbPalette) #Use the colorblind palette
testres
testres<-ggplot(data=res2, aes(x=prec, y=recall, color=LR, shape=model))+
#geom_point()+
theme_minimal()+
# We jitter the points because some are overlapping
#geom_jitter(aes(color=LR, shape=model), width=0.0007, size=3)+
geom_jitter(aes(color=LR, shape=model), width=0.001, size=3)+
scale_colour_manual(values=cbPalette) #Use the colorblind palette
testres
res2<-read.csv('test_model_results.csv')
res2$LR<-as.factor(res2$LR)
res2$model<-factor(res2$model, levels=c("resnet-18","resnet-32","resnet-152","densnet"))
testres<-ggplot(data=res2, aes(x=prec, y=recall, color=LR, shape=model))+
#geom_point()+
theme_minimal()+
# We jitter the points because some are overlapping
#geom_jitter(aes(color=LR, shape=model), width=0.0007, size=3)+
geom_jitter(aes(color=LR, shape=model), width=0.001, size=3)+
scale_colour_manual(values=cbPalette) #Use the colorblind palette
testres
View(res2)
setwd('C:\\Users\\Starship\\Desktop\\GitHub\\spacewhale\\Revision_PLOS')
res2<-read.csv('test_model_results.csv')
View(res2)
res2$LR<-as.factor(res2$LR)
res2$model<-factor(res2$model, levels=c("resnet-18","resnet-32","resnet-152","densenet"))
testres<-ggplot(data=res2, aes(x=prec, y=recall, color=LR, shape=model))+
#geom_point()+
theme_minimal()+
# We jitter the points because some are overlapping
#geom_jitter(aes(color=LR, shape=model), width=0.0007, size=3)+
geom_jitter(aes(color=LR, shape=model), width=0.001, size=3)+
scale_colour_manual(values=cbPalette) #Use the colorblind palette
testres
testres<-ggplot(data=res2, aes(x=prec, y=recall, color=LR, shape=model))+
#geom_point()+
theme_minimal()+
# We jitter the points because some are overlapping
#geom_jitter(aes(color=LR, shape=model), width=0.0007, size=3)+
geom_jitter(aes(color=LR, shape=model), width=0.002, size=3)+
scale_colour_manual(values=cbPalette) #Use the colorblind palette
testres
testres<-ggplot(data=res2, aes(x=prec, y=recall, color=LR, shape=model))+
#geom_point()+
theme_minimal()+
# We jitter the points because some are overlapping
#geom_jitter(aes(color=LR, shape=model), width=0.0007, size=3)+
geom_jitter(aes(color=LR, shape=model), height=0.002, size=3)+
scale_colour_manual(values=cbPalette) #Use the colorblind palette
testres
testres<-ggplot(data=res2, aes(x=prec, y=recall, color=LR, shape=model))+
#geom_point()+
theme_minimal()+
# We jitter the points because some are overlapping
#geom_jitter(aes(color=LR, shape=model), width=0.0007, size=3)+
geom_jitter(aes(color=LR, shape=model), width, 0.001,height=0.002, size=3)+
scale_colour_manual(values=cbPalette) #Use the colorblind palette
testres<-ggplot(data=res2, aes(x=prec, y=recall, color=LR, shape=model))+
#geom_point()+
theme_minimal()+
# We jitter the points because some are overlapping
#geom_jitter(aes(color=LR, shape=model), width=0.0007, size=3)+
geom_jitter(aes(color=LR, shape=model), width=0.001,height=0.002, size=3)+
scale_colour_manual(values=cbPalette) #Use the colorblind palette
testres
testres<-ggplot(data=res2, aes(x=prec, y=recall, color=LR, shape=model))+
#geom_point()+
theme_minimal()+
# We jitter the points because some are overlapping
#geom_jitter(aes(color=LR, shape=model), width=0.0007, size=3)+
geom_jitter(aes(color=LR, shape=model), width=-0.001,height=0.002, size=3)+
scale_colour_manual(values=cbPalette) #Use the colorblind palette
testres
testres<-ggplot(data=res2, aes(x=prec, y=recall, color=LR, shape=model))+
#geom_point()+
theme_minimal()+
# We jitter the points because some are overlapping
#geom_jitter(aes(color=LR, shape=model), width=0.0007, size=3)+
geom_jitter(aes(color=LR, shape=model), width=-0.002,height=0.002, size=3)+
scale_colour_manual(values=cbPalette) #Use the colorblind palette
testres
testres<-ggplot(data=res2, aes(x=prec, y=recall, color=LR, shape=model))+
#geom_point()+
theme_minimal()+
# We jitter the points because some are overlapping
#geom_jitter(aes(color=LR, shape=model), width=0.0007, size=3)+
geom_jitter(aes(color=LR, shape=model), width=-0.002,height=0.003, size=3)+
scale_colour_manual(values=cbPalette) #Use the colorblind palette
testres
testres<-ggplot(data=res2, aes(x=prec, y=recall, color=LR, shape=model))+
#geom_point()+
theme_minimal()+
# We jitter the points because some are overlapping
#geom_jitter(aes(color=LR, shape=model), width=0.0007, size=3)+
geom_jitter(aes(color=LR, shape=model), width=-0.002,height=0.005, size=3)+
scale_colour_manual(values=cbPalette) #Use the colorblind palette
testres
testres<-ggplot(data=res2, aes(x=prec, y=recall, color=LR, shape=model))+
#geom_point()+
theme_minimal()+
# We jitter the points because some are overlapping
#geom_jitter(aes(color=LR, shape=model), width=0.0007, size=3)+
geom_jitter(aes(color=LR, shape=model), height=0.005, size=3)+
scale_colour_manual(values=cbPalette) #Use the colorblind palette
testres
testres<-ggplot(data=res2, aes(x=prec, y=recall, color=LR, shape=model))+
#geom_point()+
theme_minimal()+
# We jitter the points because some are overlapping
#geom_jitter(aes(color=LR, shape=model), width=0.0007, size=3)+
geom_jitter(aes(color=LR, shape=model), width=0.005, size=3)+
scale_colour_manual(values=cbPalette) #Use the colorblind palette
testres
testres<-ggplot(data=res2, aes(x=prec, y=recall, color=LR, shape=model))+
#geom_point()+
theme_minimal()+
# We jitter the points because some are overlapping
#geom_jitter(aes(color=LR, shape=model), width=0.0007, size=3)+
geom_jitter(aes(color=LR, shape=model), width=0.003, size=3)+
scale_colour_manual(values=cbPalette) #Use the colorblind palette
testres
testres<-ggplot(data=res2, aes(x=prec, y=recall, color=LR, shape=model))+
#geom_point()+
theme_minimal()+
# We jitter the points because some are overlapping
#geom_jitter(aes(color=LR, shape=model), width=0.0007, size=3)+
geom_jitter(aes(color=LR, shape=model), width=0.002, size=3)+
scale_colour_manual(values=cbPalette) #Use the colorblind palette
testres
testres<-ggplot(data=res2, aes(x=prec, y=recall, color=LR, shape=model))+
#geom_point()+
theme_minimal()+
# We jitter the points because some are overlapping
#geom_jitter(aes(color=LR, shape=model), width=0.0007, size=3)+
geom_jitter(aes(color=LR, shape=model), width=0.0025, size=3)+
scale_colour_manual(values=cbPalette) #Use the colorblind palette
testres
testres<-ggplot(data=res2, aes(x=prec, y=recall, color=LR, shape=model))+
#geom_point()+
theme_minimal()+
# We jitter the points because some are overlapping
#geom_jitter(aes(color=LR, shape=model), width=0.0007, size=3)+
geom_jitter(aes(color=LR, shape=model), width=0.0015, size=3)+
scale_colour_manual(values=cbPalette) #Use the colorblind palette
testres
acc_p<-ggplot(data=res, aes(x=epoch))+
#geom_line(aes(y=Acc, color=LR))+
#geom_point(aes(y=Acc, color=LR, shape=model))+
#geom_line(aes(y=Acc, color=LR, linetype=model), size=1)+
#geom_line(data=res[which(res$model == 'densenet'),], aes(y=Acc,x=epoch, color=LR), size=1.5)+
geom_line(data=res[which(res$model != 'ResneXt'),], aes(y=Acc,x=epoch, color=LR, linetype=model), size=1)+
theme_minimal()+
scale_colour_manual(values=cbPalette)+
scale_linetype_manual(values=plottinglines)+
theme(legend.key.width=unit(1,"cm"))
acc_p
testres<-ggplot(data=res2, aes(x=prec, y=recall, color=LR, shape=model))+
#geom_point()+
theme_minimal()+
# We jitter the points because some are overlapping
#geom_jitter(aes(color=LR, shape=model), width=0.0007, size=3)+
geom_jitter(aes(color=LR, shape=model), width=0.0015, size=3)+
scale_colour_manual(values=cbPalette) #Use the colorblind palette
testres
ggplot(data =  confu_dat[which(confu_dat$mod=='resnet-32' & confu_dat$lr=='0.01'),], aes(x = lab, y = pred)) +
geom_tile(aes(fill = val), colour="black") +
geom_text(aes(label = sprintf("%1.0f", val)), vjust = 1) +
scale_fill_gradient(low = "white", high = "white") +
theme_bw() + theme(legend.position = "none")+
xlab("True Class")+
ylab("Predicted Class")+
ggtitle(confu_dat$mod, confu_dat$lr)
ggplot(data =  confu_dat[which(confu_dat$mod=='resnet-32' & confu_dat$lr=='0.001'),], aes(x = lab, y = pred)) +
geom_tile(aes(fill = val), colour="black") +
geom_text(aes(label = sprintf("%1.0f", val)), vjust = 1) +
scale_fill_gradient(low = "white", high = "white") +
theme_bw() + theme(legend.position = "none")+
xlab("True Class")+
ylab("Predicted Class")+
ggtitle(confu_dat$mod, confu_dat$lr)
den001<-c(1281,31,1,109)
ggplot(data =  confu_dat[which(confu_dat$mod=='resnet-32' & confu_dat$lr=='0.1'),], aes(x = lab, y = pred)) +
geom_tile(aes(fill = val), colour="black") +
geom_text(aes(label = sprintf("%1.0f", val)), vjust = 1) +
scale_fill_gradient(low = "white", high = "white") +
theme_bw() + theme(legend.position = "none")+
xlab("True Class")+
ylab("Predicted Class")+
ggtitle(confu_dat$mod, confu_dat$lr)
ggplot(data =  confu_dat[which(confu_dat$mod=='resnet-32' & confu_dat$lr=='0.2'),], aes(x = lab, y = pred)) +
geom_tile(aes(fill = val), colour="black") +
geom_text(aes(label = sprintf("%1.0f", val)), vjust = 1) +
scale_fill_gradient(low = "white", high = "white") +
theme_bw() + theme(legend.position = "none")+
xlab("True Class")+
ylab("Predicted Class")+
ggtitle(confu_dat$mod, confu_dat$lr)
foldtest<-ggplot(data=foldres2, aes(x=prec, y=recall, color=model))+
#geom_point(size=3)+
theme_minimal()+
# Jittering again to separate overlapping pts
geom_jitter(aes(), width=0.0002, height=0.0002, size=3)+
geom_jitter(aes(), width=0.0004, height=0.0003, size=4)+
scale_colour_manual(values=cbPalette)+
labs(x="Precision", y="Recall")
foldtest
testres<-ggplot(data=res2, aes(x=prec, y=recall, color=LR, shape=model))+
#geom_point()+
theme_minimal()+
# We jitter the points because some are overlapping
#geom_jitter(aes(color=LR, shape=model), width=0.0007, size=3)+
geom_jitter(aes(color=LR, shape=model), width=0.0015, size=3)+
scale_colour_manual(values=cbPalette) #Use the colorblind palette
testres
acc_p<-ggplot(data=res, aes(x=epoch))+
#geom_line(aes(y=Acc, color=LR))+
#geom_point(aes(y=Acc, color=LR, shape=model))+
#geom_line(aes(y=Acc, color=LR, linetype=model), size=1)+
#geom_line(data=res[which(res$model == 'densenet'),], aes(y=Acc,x=epoch, color=LR), size=1.5)+
geom_line(data=res[which(res$model != 'ResneXt'),], aes(y=Acc,x=epoch, color=LR, linetype=model), size=1)+
theme_minimal()+
scale_colour_manual(values=cbPalette)+
scale_linetype_manual(values=plottinglines)+
theme(legend.key.width=unit(1,"cm"))
acc_p
ggplot(data =  confu_dat[which(confu_dat$mod=='resnet-152' & confu_dat$lr=='0.2'),], aes(x = lab, y = pred)) +
geom_tile(aes(fill = val), colour="black") +
geom_text(aes(label = sprintf("%1.0f", val)), vjust = 1) +
scale_fill_gradient(low = "white", high = "white") +
theme_bw() + theme(legend.position = "none")+
xlab("True Class")+
ylab("Predicted Class")+
ggtitle(confu_dat$mod, confu_dat$lr)
confu_dat<-read.csv('confusion_data.csv')
confu_dat$lr<-as.factor(confu_dat$lr)
confu_dat$lab<-as.factor(confu_dat$lab)
confu_dat$pred<-as.factor(confu_dat$pred)
ggplot(data =  confu_dat[which(confu_dat$mod=='resnet-152' & confu_dat$lr=='0.2'),], aes(x = lab, y = pred)) +
geom_tile(aes(fill = val), colour="black") +
geom_text(aes(label = sprintf("%1.0f", val)), vjust = 1) +
scale_fill_gradient(low = "white", high = "white") +
theme_bw() + theme(legend.position = "none")+
xlab("True Class")+
ylab("Predicted Class")+
ggtitle(confu_dat$mod, confu_dat$lr)
ggplot(data =  confu_dat[which(confu_dat$mod=='resnet-152' & confu_dat$lr=='9e-04'),], aes(x = lab, y = pred)) +
geom_tile(aes(fill = val), colour="black") +
geom_text(aes(label = sprintf("%1.0f", val)), vjust = 1) +
scale_fill_gradient(low = "white", high = "white") +
theme_bw() + theme(legend.position = "none")+
xlab("True Class")+
ylab("Predicted Class")+
ggtitle(confu_dat$mod, confu_dat$lr)
ggplot(data =  confu_dat[which(confu_dat$mod=='resnet-152' & confu_dat$lr=='0.001'),], aes(x = lab, y = pred)) +
geom_tile(aes(fill = val), colour="black") +
geom_text(aes(label = sprintf("%1.0f", val)), vjust = 1) +
scale_fill_gradient(low = "white", high = "white") +
theme_bw() + theme(legend.position = "none")+
xlab("True Class")+
ylab("Predicted Class")+
ggtitle(confu_dat$mod, confu_dat$lr)
ggplot(data =  confu_dat[which(confu_dat$mod=='resnet-152' & confu_dat$lr=='0.01'),], aes(x = lab, y = pred)) +
geom_tile(aes(fill = val), colour="black") +
geom_text(aes(label = sprintf("%1.0f", val)), vjust = 1) +
scale_fill_gradient(low = "white", high = "white") +
theme_bw() + theme(legend.position = "none")+
xlab("True Class")+
ylab("Predicted Class")+
ggtitle(confu_dat$mod, confu_dat$lr)
ggplot(data =  confu_dat[which(confu_dat$mod=='resnet-152' & confu_dat$lr=='0.1'),], aes(x = lab, y = pred)) +
geom_tile(aes(fill = val), colour="black") +
geom_text(aes(label = sprintf("%1.0f", val)), vjust = 1) +
scale_fill_gradient(low = "white", high = "white") +
theme_bw() + theme(legend.position = "none")+
xlab("True Class")+
ylab("Predicted Class")+
ggtitle(confu_dat$mod, confu_dat$lr)
ggplot(data =  confu_dat[which(confu_dat$mod=='resnet-152' & confu_dat$lr=='0.2'),], aes(x = lab, y = pred)) +
geom_tile(aes(fill = val), colour="black") +
geom_text(aes(label = sprintf("%1.0f", val)), vjust = 1) +
scale_fill_gradient(low = "white", high = "white") +
theme_bw() + theme(legend.position = "none")+
xlab("True Class")+
ylab("Predicted Class")+
ggtitle(confu_dat$mod, confu_dat$lr)
415/6
415/60
